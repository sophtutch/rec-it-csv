apply plugin: 'java'
apply plugin: 'idea'

apply plugin: 'maven-publish'
apply plugin: 'signing'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
    compile 'org.thymeleaf:thymeleaf:3.0.9.RELEASE'

    testCompile 'junit:junit:4.12'
}

version '1.0.0.RC1'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)

            groupId 'com.github.sophtutch'
            artifactId 'recitcsv'

            from components.java
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }


            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
            if (isReleaseVersion) {
                url("https://oss.sonatype.org/service/local/staging/deploy/maven2")
            } else {
                url("https://oss.sonatype.org/content/repositories/snapshots")
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()
        root.dependencies.removeAll { dep -> dep.scope == "test" }
        root.children().last() + {
            resolveStrategy = DELEGATE_FIRST

            name 'Rec-It-CSV'
            description 'Reconciliation of CSV files and reporting of the results in HTML format.'
            url 'https://github.com/sophtutch/rec-it-csv'

            organization {
                name 'com.github.sophtutch'
                url 'https://github.com/sophtutch'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/sophtutch/rec-it-csv/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://github.com/sophtutch/rec-it-csv/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/sophtutch/rec-it-csv'
                connection 'scm:git:git://github.com/sophtutch/rec-it-csv.git'
                developerConnection 'scm:git:ssh://git@github.com:sophtutch/rec-it-csv.git'
            }
            developers {
                developer {
                    name 'J. J. Oya'
                }
            }
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}